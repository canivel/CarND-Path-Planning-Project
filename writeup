    - get the code from the getting started path palnning project to set the points x, y every .02s
    -   add a distance between points of .5 (close to 50mph)
    -   loop 50 times for the path planner calculating the angle in the distance increment
    -   use s, d coordinates to keep the car in lane
    -   set the next_s and the iterator i need to be i+1 at the start so the car does no sit still
    -   set next_d = 6 because we are in the middle lane, and 1.5 from where the waypoints are, since the lanes has
        4 meters wide, the next_d is 4*1.5
    -   create a vector of x, y using the next_s and d using the method getXY
    -   puth to next vals x and y, the xy[0], xy[1] returned from the getXY method
     -  the car keeps going in lane but need a lot of smooth in the path
     -   using a splining line will be better than a poliynomio to smooth the line
     - download the spline header file from http://kluge.in-chemnitz.de/opensource/spline/
     - add to the includes spline.h
     - create some points far spaced and use a spline to fit that and take points inside that spline
